version: '3.8'

services:
  traefik:
    image: traefik:v2.9.6
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "88:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  drop4crop-api:
    build:
      context: ../drop4crop-api
    entrypoint: uvicorn --host=0.0.0.0 app.main:app --reload --port 8000
    environment:
      - DB_HOST=drop4crop-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql+asyncpg
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_API_ID=${KEYCLOAK_API_ID}
      - KEYCLOAK_API_SECRET=${KEYCLOAK_API_SECRET}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - GEOSERVER_URL=https://drop4crop-dev.epfl.ch/geoserver
      - GEOSERVER_USER=${GEOSERVER_USER}
      - GEOSERVER_PASSWORD=${GEOSERVER_PASSWORD}
      - S3_BUCKET_ID=${S3_BUCKET_ID}
      - S3_URL=${S3_URL}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_PREFIX=${S3_PREFIX}
      - TILE_CACHE_URL=tile-cache
      - TILE_CACHE_PORT=6379
    ports:
      - 8015:8000
    depends_on:
      - drop4crop-db
    volumes:
      - ../drop4crop-api/app:/app/app
    labels:
      - "traefik.http.routers.drop4crop-bff.rule=Host(`drop4crop`) && PathPrefix(`/api`)"
      - "traefik.http.services.drop4crop-bff.loadbalancer.server.port=8000"

  drop4crop-db:
    image: postgis/postgis:16-master
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5443:5432
    volumes:
      - drop4crop-db-data:/var/lib/postgresql/data
      - ./rasters:/rasters

  drop4crop-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing yarn dev
    labels:
      - "traefik.http.routers.drop4crop-ui.rule=Host(`drop4crop`)"
      - "traefik.http.services.drop4crop-ui.loadbalancer.server.port=5173"
    volumes:
      - ../drop4crop-ui:/app

  drop4crop-admin:
    build:
      context: ../drop4crop-admin
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing yarn dev
    labels:
      - "traefik.http.routers.drop4crop-admin.rule=Host(`drop4crop`) && PathPrefix(`/admin`)"
      - "traefik.http.services.drop4crop-admin.loadbalancer.server.port=5173"
    volumes:
      - ../drop4crop-admin:/app
    ports:
      - 5173:5173

  tile-cache:
    image: redis:7.4.0
    ports:
      - 6379:6379

volumes:
  drop4crop-db-data:
